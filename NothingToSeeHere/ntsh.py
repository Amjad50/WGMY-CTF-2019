import os, sys, time
import msvcrt, base64 ,zlib, marshal, importlib, types

DEBUG = False
player_cpos = (10,4)
player_ppos = player_cpos

if DEBUG:
    from gamelogic import Logic
    logic = Logic(player_cpos)
else:
    logic = "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"
    logic = base64.b64decode(logic)
    logic = zlib.decompress(logic)
    logic = marshal.loads(logic[16:])
    mod = types.ModuleType("gamelogic")
    exec(logic, mod.__dict__)
    logic = mod.Logic(player_cpos)

def render_screen():
    global logic, player_cpos

    os.system("cls")
    print("╔════════════════════════════════════════╗")
    print("║ Welcome to Wargames.my 2019 Annual CTF ║")
    print("╠═══════════╦════════════════════════════╣")
    print("║ Challenge ║ Nothing To See Here!       ║")
    print("║ Author    ║ klks (@klks84)             ║")
    print("╚═══════════╩════════════════════════════╝")

    if logic:
        print(logic.viewport)
    print(f"Player position => X:{player_cpos[0]} Y:{player_cpos[1]}")
    print("Use wasd to move character")
    print("Press q to quit")

def wait_player_move():
    global player_cpos
    pmove = msvcrt.getche()

    cur_x, cur_y = player_cpos
    if pmove == b"w":
        cur_y -= 1
        if 4 > cur_y: cur_y = 4
    elif pmove == b"a":
        cur_x -= 1
        if 10 >= cur_x: cur_x = 10
    elif pmove == b"s":
        cur_y += 1
    elif pmove == b"d":
        cur_x += 1
    elif pmove == b"q":
        print("\n\nThanks for playing. See you next year!!!")
        sys.exit(-1)
    else:
        pass

    player_cpos = (cur_x, cur_y)

def play_game():
    global player_ppos, player_cpos

    render_screen()
    while True:
        if player_ppos != player_cpos:
            player_ppos = player_cpos
            if logic:
                logic.player_move(player_cpos)
            render_screen()
        wait_player_move()

if __name__ == "__main__":
    play_game()